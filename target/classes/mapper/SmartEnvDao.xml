<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hao.lzlglab.dao.SmartEnvDao">
  <resultMap id="BaseResultMap" type="com.hao.lzlglab.entity.SmartEnv">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="device_adres" jdbcType="CHAR" property="deviceAdres" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="value" jdbcType="DOUBLE" property="value" />
    <result column="gather_date" jdbcType="TIMESTAMP" property="gatherDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, device_adres, `type`, `value`, gather_date
  </sql>
  <select id="selectByExample" parameterType="com.hao.lzlglab.entity.SmartEnvExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from smart_env
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from smart_env
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from smart_env
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hao.lzlglab.entity.SmartEnvExample">
    delete from smart_env
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hao.lzlglab.entity.SmartEnv">
    insert into smart_env (id, device_adres, `type`, 
      `value`, gather_date)
    values (#{id,jdbcType=CHAR}, #{deviceAdres,jdbcType=CHAR}, #{type,jdbcType=INTEGER}, 
      #{value,jdbcType=DOUBLE}, #{gatherDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hao.lzlglab.entity.SmartEnv">
    insert into smart_env
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deviceAdres != null">
        device_adres,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="value != null">
        `value`,
      </if>
      <if test="gatherDate != null">
        gather_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="deviceAdres != null">
        #{deviceAdres,jdbcType=CHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        #{value,jdbcType=DOUBLE},
      </if>
      <if test="gatherDate != null">
        #{gatherDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hao.lzlglab.entity.SmartEnvExample" resultType="java.lang.Long">
    select count(*) from smart_env
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update smart_env
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.deviceAdres != null">
        device_adres = #{record.deviceAdres,jdbcType=CHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.value != null">
        `value` = #{record.value,jdbcType=DOUBLE},
      </if>
      <if test="record.gatherDate != null">
        gather_date = #{record.gatherDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update smart_env
    set id = #{record.id,jdbcType=CHAR},
      device_adres = #{record.deviceAdres,jdbcType=CHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      `value` = #{record.value,jdbcType=DOUBLE},
      gather_date = #{record.gatherDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hao.lzlglab.entity.SmartEnv">
    update smart_env
    <set>
      <if test="deviceAdres != null">
        device_adres = #{deviceAdres,jdbcType=CHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        `value` = #{value,jdbcType=DOUBLE},
      </if>
      <if test="gatherDate != null">
        gather_date = #{gatherDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hao.lzlglab.entity.SmartEnv">
    update smart_env
    set device_adres = #{deviceAdres,jdbcType=CHAR},
      `type` = #{type,jdbcType=INTEGER},
      `value` = #{value,jdbcType=DOUBLE},
      gather_date = #{gatherDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>